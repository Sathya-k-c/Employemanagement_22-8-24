@model IEnumerable<Employemanagement_22_8_24.Models.Request>

@{
    ViewBag.Title = "Request Management";
    var requestStatus = ViewBag.CurrentStatus as string ?? "Pending";
}

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Baskervville+SC&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Baskervville+SC&family=Kalam:wght@300;400;700&display=swap" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Alike&family=Baskervville+SC&family=Kalam:wght@300;400;700&display=swap" rel="stylesheet">
    <style>
        body {
            background: url('https://previews.123rf.com/images/pitinan/pitinan2302/pitinan230201189/198173868-empty-modern-office-background-in-city-center-workspace-interior-design-clean-and-bright-office.jpg') no-repeat center center fixed;
            background-size: cover;
            color: black; /* Darker text color for readability on white card */
            font-family: "Alike", serif;
            font-weight: 400;
            font-style: normal;
            font-weight: bold;
        }

        .container {
            margin-top: 30px;
            max-width: 80%;
            padding: 20px;
            background-color: #ffffff; /* Light background for main content */
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            background-color: transparent;
            backdrop-filter: blur(50px);
        }

        h2 {
            text-align: center;
            color: #333;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
            margin-bottom: 20px;
            font-size: 2em;
        }

        .btn-group a {
            border: none;
            border-radius: 5px;
            margin: 0 5px;
            font-weight: bold;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

        .btn-primary.active, .btn-success.active, .btn-danger.active {
            background: linear-gradient(to right, #4a90e2, #50e3c2);
            color: #fff;
        }

        .table {
            background-color: #fff; /* White background for the table */
            border-radius: 5px;
            overflow: hidden;
            margin-top: 20px;
            font-size: 0.9em;
        }

            .table th {
                background: linear-gradient(to right, #6a11cb, #2575fc); /* Gradient header */
                color: #fff;
            }

        .table-striped tbody tr:nth-of-type(odd) {
            background-color: #f9f9f9;
        }

        .table-striped tbody tr:nth-of-type(even) {
            background-color: #e9e9e9;
        }

        .btn-success, .btn-danger {
            border-radius: 5px;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

            .btn-success:hover, .btn-danger:hover {
                background: #333;
                color: #fff;
            }

        .btn-secondary {
            margin-top: 20px;
            background-color: #888;
            border: none;
            border-radius: 5px;
            color: #fff;
            padding: 10px 20px;
            font-size: 1em;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

            .btn-secondary:hover {
                background-color: #555;
            }

        .text-danger {
            font-size: 0.9em;
        }

        .remarks-form {
            display: none;
            margin-top: 10px;
        }

            .remarks-form.active {
                display: block;
            }

        .navbar {
            background-color: rgba(0, 0, 0, 0.8); /* Semi-transparent black navbar */
        }



        .navbar-custom {
            background: linear-gradient(to right, #ff6f61, #d83a56); /* Gradient background for navbar */
            color: #ffffff !important; /* Ensure navbar text is white */
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            z-index: 1000; /* Ensure navbar stays on top */
        }

        .navbar-brand, .nav-link {
            color: #ffffff !important; /* Ensure navbar text is white */
        }
    </style>
</head>
<!-- Navbar -->
<nav class="navbar navbar-expand-lg">
    <a asp-controller="Admin" asp-action="AdminDashboard" class="navbar-brand"> Dashboard</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav mr-auto">

            <li class="nav-item">
                <a class="nav-link" asp-controller="Admin" asp-action="CreateUser">Create Users</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" asp-controller="Admin" asp-action="CreateLogin">Create Login </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" asp-controller="Admin" asp-action="ViewUsers">View Users</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" asp-controller="Admin" asp-action="RequestManagement">Request Management</a>
            </li>
        </ul>
        <ul class="navbar-nav ml-auto">
            <li class="nav-item">
                <a class="nav-link" asp-controller="Admin" asp-action="Logout">Logout</a>
            </li>
        </ul>
    </div>
</nav>

<div class="container">
    <h2>Request Management</h2>

    <div class="btn-group mb-3" role="group">
        <a asp-controller="Admin" asp-action="RequestManagement" asp-route-status="Pending" class="btn btn-primary @(requestStatus == "Pending" ? "active" : "")">Pending</a>
        <a asp-controller="Admin" asp-action="RequestManagement" asp-route-status="Accepted" class="btn btn-success @(requestStatus == "Accepted" ? "active" : "")">Accepted</a>
        <a asp-controller="Admin" asp-action="RequestManagement" asp-route-status="Rejected" class="btn btn-danger @(requestStatus == "Rejected" ? "active" : "")">Rejected</a>
    </div>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Request ID</th>
                <th>User ID</th>
                <th>Edit Request</th>
                <th>Request Date</th>
                <th>Status</th>
                <th>Remarks</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var request in Model)
            {
                <tr>
                    <td>@request.RequestId</td>
                    <td>@request.UserId</td>
                    <td>@request.EditRequest</td>
                    <td>@request.RequestDate.ToString("yyyy-MM-dd HH:mm:ss")</td>
                    <td>@request.isprocessed</td>
                    <td>
                        @if (request.isprocessed == Employemanagement_22_8_24.Data.Enums.Isprocessed.Accepted || request.isprocessed == Employemanagement_22_8_24.Data.Enums.Isprocessed.Rejected)
                        {
                            @request.Remarks
                        }
                        else
                        {
                            <span>N/A</span>
                        }
                    </td>
                    <td>
                        @if (request.isprocessed == Employemanagement_22_8_24.Data.Enums.Isprocessed.Processing)
                        {
                            <button type="button" class="btn btn-success" onclick="showRemarkForm('accept-@request.RequestId')">Accept</button>
                            <button type="button" class="btn btn-danger" onclick="showRemarkForm('reject-@request.RequestId')">Reject</button>
                        }
                    </td>
                </tr>
                <tr class="remarks-form" id="accept-@request.RequestId">
                    <td colspan="7">
                        <form asp-action="AcceptRequest" asp-controller="Admin" method="post">
                            <input type="hidden" name="requestId" value="@request.RequestId" />
                            <div class="form-group">
                                <label for="remarks">Remarks:</label>
                                <textarea name="remarks" id="remarks" class="form-control" required></textarea>
                            </div>
                            <button type="submit" class="btn btn-success">Submit</button>
                        </form>
                    </td>
                </tr>
                <tr class="remarks-form" id="reject-@request.RequestId">
                    <td colspan="7">
                        <form asp-action="RejectRequest" asp-controller="Admin" method="post">
                            <input type="hidden" name="requestId" value="@request.RequestId" />
                            <div class="form-group">
                                <label for="remarks">Remarks:</label>
                                <textarea name="remarks" id="remarks" class="form-control" required></textarea>
                            </div>
                            <button type="submit" class="btn btn-danger">Submit</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <a asp-controller="Admin" asp-action="AdminDashboard" class="btn btn-secondary">Back to Dashboard</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function showRemarkForm(formId) {
            // Hide all remark forms
            document.querySelectorAll('.remarks-form').forEach(form => {
                form.classList.remove('active');
            });

            // Show the selected form
            document.getElementById(formId).classList.add('active');
        }
    </script>
}
